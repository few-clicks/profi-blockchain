{
  "contractName": "EmploymentContractFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "employer",
          "type": "address"
        }
      ],
      "name": "ContractCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "employmentContracts",
      "outputs": [
        {
          "internalType": "contract EmploymentContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_salary",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bonus",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vacationPay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sickLeavePay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_penalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_paymentInterval",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        }
      ],
      "name": "createEmploymentContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContracts",
      "outputs": [
        {
          "internalType": "contract EmploymentContract[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"employer\",\"type\":\"address\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_salary\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vacationPay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sickLeavePay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_paymentInterval\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"createEmploymentContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"employmentContracts\",\"outputs\":[{\"internalType\":\"contract EmploymentContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContracts\",\"outputs\":[{\"internalType\":\"contract EmploymentContract[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractCreated(address,address)\":{\"params\":{\"contractAddress\":\"Address of the created contract\",\"employer\":\"Employer's address\"}}},\"kind\":\"dev\",\"methods\":{\"createEmploymentContract(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)\":{\"params\":{\"_bonus\":\"Bonus\",\"_endDate\":\"Contract end date\",\"_penalty\":\"Penalty for contract termination\",\"_salary\":\"Monthly salary\",\"_sickLeavePay\":\"Sick leave pay\",\"_startDate\":\"Contract start date\",\"_vacationPay\":\"Vacation pay\"}},\"getContracts()\":{\"returns\":{\"_0\":\"Array of contracts\"}}},\"title\":\"Employment Contract Factory\",\"version\":1},\"userdoc\":{\"events\":{\"ContractCreated(address,address)\":{\"notice\":\"Event for contract creation\"}},\"kind\":\"user\",\"methods\":{\"createEmploymentContract(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Function to create a new contract\"},\"getContracts()\":{\"notice\":\"Function to get all created contracts\"}},\"notice\":\"This contract allows the creation of EmploymentContract instances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Employment.sol\":\"EmploymentContractFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Employment.sol\":{\"keccak256\":\"0x485824945094fba67bc419d7ce8bcfa2d5faec8edab96c7ddcea3a050106afb5\",\"urls\":[\"bzz-raw://453bde9297e4f0503e44819bbf9578149ce73ed0918ebc9c76c593443263a802\",\"dweb:/ipfs/QmQSHz56rwp7P5AV7SDzcUpHtc98pts1hpLPXinUoTWVb6\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c806322516eb0146200004b578063c3a2a93a146200006b578063fab21ab1146200008d575b600080fd5b620000696004803603810190620000639190620002f4565b620000c3565b005b62000075620001bc565b60405162000084919062000572565b60405180910390f35b620000ab6004803603810190620000a59190620002c8565b6200024c565b604051620000ba919062000596565b60405180910390f35b6000338a8a8a8a8a8a8a8a8a604051620000dd906200028c565b620000f29a99989796959493929190620004c2565b604051809103906000f0801580156200010f573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2d49c67975aadd2d389580b368cfff5b49965b0bd5da33c144922ce01e7a4d7b8133604051620001a892919062000495565b60405180910390a150505050505050505050565b606060008054806020026020016040519081016040528092919081815260200182805480156200024257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620001f7575b5050505050905090565b600081815481106200025d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611ce5806200068783390190565b600081359050620002ab8162000652565b92915050565b600081359050620002c2816200066c565b92915050565b600060208284031215620002db57600080fd5b6000620002eb84828501620002b1565b91505092915050565b60008060008060008060008060006101208a8c0312156200031457600080fd5b6000620003248c828d01620002b1565b9950506020620003378c828d01620002b1565b98505060406200034a8c828d01620002b1565b97505060606200035d8c828d01620002b1565b9650506080620003708c828d01620002b1565b95505060a0620003838c828d01620002b1565b94505060c0620003968c828d01620002b1565b93505060e0620003a98c828d01620002b1565b925050610100620003bd8c828d016200029a565b9150509295985092959850929598565b6000620003db838362000462565b60208301905092915050565b620003f281620005ec565b82525050565b60006200040582620005c3565b620004118185620005db565b93506200041e83620005b3565b8060005b8381101562000455578151620004398882620003cd565b97506200044683620005ce565b92505060018101905062000422565b5085935050505092915050565b6200046d816200062a565b82525050565b6200047e816200062a565b82525050565b6200048f8162000620565b82525050565b6000604082019050620004ac6000830185620003e7565b620004bb6020830184620003e7565b9392505050565b600061014082019050620004da600083018d620003e7565b620004e9602083018c62000484565b620004f8604083018b62000484565b62000507606083018a62000484565b62000516608083018962000484565b6200052560a083018862000484565b6200053460c083018762000484565b6200054360e083018662000484565b6200055361010083018562000484565b62000563610120830184620003e7565b9b9a5050505050505050505050565b600060208201905081810360008301526200058e8184620003f8565b905092915050565b6000602082019050620005ad600083018462000473565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000620005f98262000600565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000637826200063e565b9050919050565b60006200064b8262000600565b9050919050565b6200065d81620005ec565b81146200066957600080fd5b50565b620006778162000620565b81146200068357600080fd5b5056fe60806040526000600b60006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162001ce538038062001ce583398181016040528101906200005291906200027b565b83851062000097576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200008e9062000457565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614156200010a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001019062000479565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200017d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000174906200049b565b60405180910390fd5b896000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860028190555087600381905550866004819055508560058190555084600781905550836008819055508260068190555081600a8190555080600b60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426009819055505050505050505050505062000540565b6000815190506200025e816200050c565b92915050565b600081519050620002758162000526565b92915050565b6000806000806000806000806000806101408b8d0312156200029c57600080fd5b6000620002ac8d828e016200024d565b9a50506020620002bf8d828e0162000264565b9950506040620002d28d828e0162000264565b9850506060620002e58d828e0162000264565b9750506080620002f88d828e0162000264565b96505060a06200030b8d828e0162000264565b95505060c06200031e8d828e0162000264565b94505060e0620003318d828e0162000264565b935050610100620003458d828e0162000264565b925050610120620003598d828e016200024d565b9150509295989b9194979a5092959850565b60006200037a602283620004bd565b91507f53746172742064617465206d757374206265206265666f726520656e6420646160008301527f74650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620003e2601f83620004bd565b91507f456d706c6f79657220616464726573732063616e6e6f74206265207a65726f006000830152602082019050919050565b600062000424601e83620004bd565b91507f5265736572766520616464726573732063616e6e6f74206265207a65726f00006000830152602082019050919050565b6000602082019050818103600083015262000472816200036b565b9050919050565b600060208201905081810360008301526200049481620003d3565b9050919050565b60006020820190508181036000830152620004b68162000415565b9050919050565b600082825260208201905092915050565b6000620004db82620004e2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200051781620004ce565b81146200052357600080fd5b50565b620005318162000502565b81146200053d57600080fd5b50565b61179580620005506000396000f3fe60806040526004361061010d5760003560e01c8063ae200e7911610095578063cd3293de11610064578063cd3293de1461030e578063d8d7970014610339578063e19bc3eb14610350578063e66a6b221461035a578063ed7a1fea1461038557610114565b8063ae200e7914610283578063bad68548146102ae578063bd097e21146102d9578063c24a0f8b146102e357610114565b80632fd949ca116100dc5780632fd949ca146101c257806375b4d78c146101d957806379e93bf8146102045780637aeabb391461022d578063a0a1a7d71461025857610114565b80630397b652146101165780630b97bc86146101415780630edd2ffc1461016c5780631cc1cf461461019757610114565b3661011457005b005b34801561012257600080fd5b5061012b6103b0565b6040516101389190611595565b60405180910390f35b34801561014d57600080fd5b506101566103b6565b6040516101639190611595565b60405180910390f35b34801561017857600080fd5b506101816103bc565b60405161018e9190611595565b60405180910390f35b3480156101a357600080fd5b506101ac6103c2565b6040516101b99190611595565b60405180910390f35b3480156101ce57600080fd5b506101d76103c8565b005b3480156101e557600080fd5b506101ee6106cd565b6040516101fb9190611595565b60405180910390f35b34801561021057600080fd5b5061022b60048036038101906102269190610e99565b6106d3565b005b34801561023957600080fd5b506102426108c5565b60405161024f9190611595565b60405180910390f35b34801561026457600080fd5b5061026d6108cb565b60405161027a919061139f565b60405180910390f35b34801561028f57600080fd5b506102986108f1565b6040516102a5919061139f565b60405180910390f35b3480156102ba57600080fd5b506102c3610915565b6040516102d09190611595565b60405180910390f35b6102e161091b565b005b3480156102ef57600080fd5b506102f8610a3c565b6040516103059190611595565b60405180910390f35b34801561031a57600080fd5b50610323610a42565b604051610330919061139f565b60405180910390f35b34801561034557600080fd5b5061034e610a68565b005b610358610cdb565b005b34801561036657600080fd5b5061036f610e6b565b60405161037c91906113ba565b60405180910390f35b34801561039157600080fd5b5061039a610e7e565b6040516103a79190611595565b60405180910390f35b60025481565b60075481565b60065481565b600a5481565b60011515600b60009054906101000a900460ff1615151461041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041590611495565b60405180910390fd5b6008544210610462576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610459906114b5565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561056b576006544710156104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290611555565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006549081150290604051600060405180830381858888f19350505050158015610565573d6000803e3d6000fd5b506106b0565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561067457600654471015610606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fd90611555565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006549081150290604051600060405180830381858888f1935050505015801561066e573d6000803e3d6000fd5b506106af565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a690611475565b60405180910390fd5b5b6000600b60006101000a81548160ff021916908315150217905550565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075890611535565b60405180910390fd5b600b60009054906101000a900460ff16156107b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a890611515565b60405180910390fd5b6007544210156107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed906113f5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d90611435565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60006101000a81548160ff02191690831515021790555050565b60095481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a090611535565b60405180910390fd5b600034116109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e390611575565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0939f6f4877faf071412e527bc4c6d0bd65ad077e52b57334f7765265647a7f134604051610a329190611595565b60405180910390a2565b60085481565b600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aed90611535565b60405180910390fd5b60011515600b60009054906101000a900460ff16151514610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4390611495565b60405180910390fd5b600a54600954610b5c91906115c1565b421015610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b95906114f5565b60405180910390fd5b6008544210610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd990611455565b60405180910390fd5b6000600a546301e13380610bf69190611617565b600c600254610c059190611648565b610c0f9190611617565b905080471015610c54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4b90611555565b60405180910390fd5b600a5460096000828254610c6891906115c1565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610cd7573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d62906113d5565b60405180910390fd5b600b60009054906101000a900460ff16610dba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db1906114d5565b60405180910390fd5b6006543414610dfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df590611415565b60405180910390fd5b600b60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006549081150290604051600060405180830381858888f19350505050158015610e68573d6000803e3d6000fd5b50565b600b60009054906101000a900460ff1681565b60045481565b600081359050610e9381611748565b92915050565b600060208284031215610eab57600080fd5b6000610eb984828501610e84565b91505092915050565b610ecb816116a2565b82525050565b610eda816116b4565b82525050565b6000610eed6025836115b0565b91507f4f6e6c7920656d706c6f7965652063616e20706572666f726d2074686973206160008301527f6374696f6e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f536028836115b0565b91507f436f6e7472616374207374617274206461746520686173206e6f74206265656e60008301527f20726561636865640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fb96025836115b0565b91507f456d706c6f796565206d7573742073656e64207468652070656e616c7479206160008301527f6d6f756e740000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061101f601f836115b0565b91507f456d706c6f79656520616464726573732063616e6e6f74206265207a65726f006000830152602082019050919050565b600061105f6012836115b0565b91507f436f6e74726163742068617320656e64656400000000000000000000000000006000830152602082019050919050565b600061109f6034836115b0565b91507f4f6e6c7920656d706c6f796572206f7220656d706c6f7965652063616e20746560008301527f726d696e6174652074686520636f6e74726163740000000000000000000000006020830152604082019050919050565b60006111056026836115b0565b91507f436f6e7472616374206973206e6f74207369676e656420627920656d706c6f7960008301527f65652079657400000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061116b601a836115b0565b91507f436f6e74726163742068617320616c726561647920656e6465640000000000006000830152602082019050919050565b60006111ab6029836115b0565b91507f436f6e7472616374206d757374206265207369676e656420627920656d706c6f60008301527f79657220666972737400000000000000000000000000000000000000000000006020830152604082019050919050565b6000611211601f836115b0565b91507f5061796d656e7420696e74657276616c20686173206e6f7420706173736564006000830152602082019050919050565b60006112516017836115b0565b91507f436f6e747261637420616c7265616479207369676e65640000000000000000006000830152602082019050919050565b60006112916025836115b0565b91507f4f6e6c7920656d706c6f7965722063616e20706572666f726d2074686973206160008301527f6374696f6e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112f7601d836115b0565b91507f496e73756666696369656e7420636f6e74726163742062616c616e63650000006000830152602082019050919050565b60006113376029836115b0565b91507f4d7573742073656e6420736f6d6520657468657220746f2066756e642074686560008301527f20636f6e747261637400000000000000000000000000000000000000000000006020830152604082019050919050565b611399816116e0565b82525050565b60006020820190506113b46000830184610ec2565b92915050565b60006020820190506113cf6000830184610ed1565b92915050565b600060208201905081810360008301526113ee81610ee0565b9050919050565b6000602082019050818103600083015261140e81610f46565b9050919050565b6000602082019050818103600083015261142e81610fac565b9050919050565b6000602082019050818103600083015261144e81611012565b9050919050565b6000602082019050818103600083015261146e81611052565b9050919050565b6000602082019050818103600083015261148e81611092565b9050919050565b600060208201905081810360008301526114ae816110f8565b9050919050565b600060208201905081810360008301526114ce8161115e565b9050919050565b600060208201905081810360008301526114ee8161119e565b9050919050565b6000602082019050818103600083015261150e81611204565b9050919050565b6000602082019050818103600083015261152e81611244565b9050919050565b6000602082019050818103600083015261154e81611284565b9050919050565b6000602082019050818103600083015261156e816112ea565b9050919050565b6000602082019050818103600083015261158e8161132a565b9050919050565b60006020820190506115aa6000830184611390565b92915050565b600082825260208201905092915050565b60006115cc826116e0565b91506115d7836116e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561160c5761160b6116ea565b5b828201905092915050565b6000611622826116e0565b915061162d836116e0565b92508261163d5761163c611719565b5b828204905092915050565b6000611653826116e0565b915061165e836116e0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611697576116966116ea565b5b828202905092915050565b60006116ad826116c0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b611751816116a2565b811461175c57600080fd5b5056fea264697066735822122030a6d65a319dee114f66d1f4cb1f5908110d91afae3769495efca2cf85dda02164736f6c63430008000033a26469706673582212209230d7cd25c0a5af5d9fae48f31849d0e1004f9213177def7bef2dcd0bfb4ee764736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7716:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:1"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:1",
                "type": ""
              }
            ],
            "src": "7:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:1",
                "type": ""
              }
            ],
            "src": "152:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:1",
                "type": ""
              }
            ],
            "src": "297:262:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "767:1226:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "814:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "823:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "826:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "816:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "816:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "816:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "788:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "797:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "784:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "784:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "809:3:1",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "780:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "780:33:1"
                  },
                  "nodeType": "YulIf",
                  "src": "777:2:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "840:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "855:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "869:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "859:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "884:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "919:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "930:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "915:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "915:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "939:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "894:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "894:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "884:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "967:118:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "982:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "996:2:1",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "986:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1012:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1047:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1058:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1043:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1043:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1067:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1022:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1022:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1012:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1095:118:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1110:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1124:2:1",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1114:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1140:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1175:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1186:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1171:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1171:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1195:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1150:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1150:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1140:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1223:118:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1238:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1252:2:1",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1242:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1268:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1303:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1314:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1299:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1299:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1323:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1278:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1278:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1268:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1351:119:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1366:17:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1380:3:1",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1370:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1397:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1432:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1443:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1428:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1428:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1452:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1407:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1407:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "1397:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1480:119:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1495:17:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1509:3:1",
                        "type": "",
                        "value": "160"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1499:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1526:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1561:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1572:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1557:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1557:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1581:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1536:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "1526:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1609:119:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1624:17:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1638:3:1",
                        "type": "",
                        "value": "192"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1628:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1655:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1690:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1701:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1686:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1686:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1710:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1665:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1665:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value6",
                          "nodeType": "YulIdentifier",
                          "src": "1655:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1738:119:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1753:17:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1767:3:1",
                        "type": "",
                        "value": "224"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1757:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1784:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1819:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1830:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1815:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1815:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1839:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1794:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value7",
                          "nodeType": "YulIdentifier",
                          "src": "1784:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1867:119:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1882:17:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1896:3:1",
                        "type": "",
                        "value": "256"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1886:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1913:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1948:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1959:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1944:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1944:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1968:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1923:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value8",
                          "nodeType": "YulIdentifier",
                          "src": "1913:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "673:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "684:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "696:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "704:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "712:6:1",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "720:6:1",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "728:6:1",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "736:6:1",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "744:6:1",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "752:6:1",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "760:6:1",
                "type": ""
              }
            ],
            "src": "565:1428:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2113:133:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2191:6:1"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2199:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_EmploymentContract_$408_to_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "2123:67:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2123:80:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2123:80:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2212:28:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2230:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2235:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2226:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "2212:10:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_contract$_EmploymentContract_$408_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2086:6:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2094:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "2102:10:1",
                "type": ""
              }
            ],
            "src": "1999:247:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2317:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2334:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2357:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2339:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2339:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2327:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2327:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2327:37:1"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2305:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2312:3:1",
                "type": ""
              }
            ],
            "src": "2252:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2592:728:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2602:94:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2690:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2616:73:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2616:80:1"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2606:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2705:101:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2794:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2799:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2712:81:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2712:94:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2705:3:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2815:97:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2906:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2830:75:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2830:82:1"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "2819:7:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2921:21:1",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "2935:7:1"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "2925:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3011:284:1",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3025:34:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3052:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3046:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3046:13:1"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "3029:13:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3072:104:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "3157:13:1"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3172:3:1"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_contract$_EmploymentContract_$408_to_t_address_payable",
                            "nodeType": "YulIdentifier",
                            "src": "3079:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3079:97:1"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3072:3:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3189:96:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3278:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "3199:78:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3199:86:1"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3189:6:1"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2973:1:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2976:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2970:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2970:13:1"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2984:18:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2986:14:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2995:1:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2998:1:1",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2991:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2991:9:1"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2986:1:1"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2955:14:1",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2957:10:1",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2966:1:1",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "2961:1:1",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "2951:344:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3304:10:1",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3311:3:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3304:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr_to_t_array$_t_address_payable_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2571:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2578:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2587:3:1",
                "type": ""
              }
            ],
            "src": "2434:886:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3415:100:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3432:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3502:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_EmploymentContract_$408_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3437:64:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3437:71:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3425:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3425:84:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3425:84:1"
                }
              ]
            },
            "name": "abi_encode_t_contract$_EmploymentContract_$408_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3403:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3410:3:1",
                "type": ""
              }
            ],
            "src": "3326:189:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3620:100:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3637:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3707:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_EmploymentContract_$408_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3642:64:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3642:71:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3630:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3630:84:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3630:84:1"
                }
              ]
            },
            "name": "abi_encode_t_contract$_EmploymentContract_$408_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3608:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3615:3:1",
                "type": ""
              }
            ],
            "src": "3521:199:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3791:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3808:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3831:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3813:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3813:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3801:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3801:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3801:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3779:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3786:3:1",
                "type": ""
              }
            ],
            "src": "3726:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3976:206:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3986:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3998:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4009:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3994:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3994:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3986:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4066:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4079:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4090:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4075:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4075:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4022:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4022:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4022:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4147:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4160:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4171:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4156:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4156:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4103:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4103:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4103:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3940:9:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3952:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3960:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3971:4:1",
                "type": ""
              }
            ],
            "src": "3850:332:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4538:869:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4548:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4560:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4571:3:1",
                        "type": "",
                        "value": "320"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4556:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4556:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4548:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4629:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4642:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4653:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4638:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4638:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4585:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4585:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4585:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4710:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4723:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4734:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4719:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4719:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4666:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4666:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4666:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4792:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4805:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4816:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4801:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4801:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4748:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4748:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4748:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4874:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4887:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4898:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4883:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4883:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4830:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4830:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4830:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "4956:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4969:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4980:3:1",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4965:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4965:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4912:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4912:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4912:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "5039:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5052:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5063:3:1",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5048:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5048:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4995:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4995:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4995:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "5122:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5135:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5146:3:1",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5131:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5131:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5078:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5078:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5078:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "5205:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5218:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5229:3:1",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5214:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5214:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5161:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5161:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5161:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "5288:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5301:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5312:3:1",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5297:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5297:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5244:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5244:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5244:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "5371:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5384:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5395:3:1",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5380:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5380:19:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5327:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5327:73:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5327:73:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4438:9:1",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "4450:6:1",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "4458:6:1",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "4466:6:1",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4474:6:1",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4482:6:1",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4490:6:1",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4498:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4506:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4514:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4522:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4533:4:1",
                "type": ""
              }
            ],
            "src": "4188:1219:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5595:259:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5605:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5617:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5628:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5613:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5613:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5605:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5652:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5663:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5648:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5648:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5671:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5677:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5667:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5667:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5641:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5641:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5641:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5697:150:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5833:6:1"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5842:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr_to_t_array$_t_address_payable_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5705:127:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5705:142:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5697:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5567:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5579:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5590:4:1",
                "type": ""
              }
            ],
            "src": "5413:441:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5992:158:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6002:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6014:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6025:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6010:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6010:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6002:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6116:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6129:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6140:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6125:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6125:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_EmploymentContract_$408_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6038:77:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6038:105:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6038:105:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_EmploymentContract_$408__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5964:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5976:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5987:4:1",
                "type": ""
              }
            ],
            "src": "5860:290:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6254:60:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6264:11:1",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "6272:3:1"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "6264:4:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6285:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "6297:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6302:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6293:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6293:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "6285:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "6241:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6249:4:1",
                "type": ""
              }
            ],
            "src": "6156:158:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6420:40:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6431:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6447:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6441:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6441:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6431:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6403:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6413:6:1",
                "type": ""
              }
            ],
            "src": "6320:140:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6567:38:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6577:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "6589:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6594:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6585:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6585:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "6577:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "6554:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "6562:4:1",
                "type": ""
              }
            ],
            "src": "6466:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6730:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6747:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6752:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6740:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6740:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6740:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6768:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6787:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6792:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6783:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6783:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6768:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6702:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6707:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6718:11:1",
                "type": ""
              }
            ],
            "src": "6611:192:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6854:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6864:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6893:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6875:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6875:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6864:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6836:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6846:7:1",
                "type": ""
              }
            ],
            "src": "6809:96:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6956:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6966:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6981:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6988:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6977:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6977:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6966:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6938:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6948:7:1",
                "type": ""
              }
            ],
            "src": "6911:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7088:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7098:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7109:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7098:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7070:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7080:7:1",
                "type": ""
              }
            ],
            "src": "7043:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7220:92:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7230:76:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7300:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_EmploymentContract_$408_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7243:56:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7243:63:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7230:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_EmploymentContract_$408_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7200:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7210:9:1",
                "type": ""
              }
            ],
            "src": "7126:186:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7404:53:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7414:37:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7445:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7427:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7427:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7414:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_EmploymentContract_$408_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7384:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7394:9:1",
                "type": ""
              }
            ],
            "src": "7318:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7506:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7563:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7572:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7575:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7565:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7565:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7565:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7529:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7554:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7536:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7536:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7526:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7526:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7519:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7519:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "7516:2:1"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7499:5:1",
                "type": ""
              }
            ],
            "src": "7463:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7634:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7691:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7700:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7703:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7693:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7693:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7693:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7657:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7682:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "7664:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7664:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7654:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7654:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7647:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7647:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "7644:2:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7627:5:1",
                "type": ""
              }
            ],
            "src": "7591:122:1"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_contract$_EmploymentContract_$408_to_t_address_payable(value0, pos) -> updatedPos {\n        abi_encode_t_contract$_EmploymentContract_$408_to_t_address_payable(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // contract EmploymentContract[] -> address payable[]\n    function abi_encode_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr_to_t_array$_t_address_payable_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_contract$_EmploymentContract_$408_to_t_address_payable(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_contract$_EmploymentContract_$408_to_t_address_payable(value, pos) {\n        mstore(pos, convert_t_contract$_EmploymentContract_$408_to_t_address_payable(value))\n    }\n\n    function abi_encode_t_contract$_EmploymentContract_$408_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_EmploymentContract_$408_to_t_address_payable(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_address_to_t_address_fromStack(value9,  add(headStart, 288))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr_to_t_array$_t_address_payable_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_EmploymentContract_$408__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_EmploymentContract_$408_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_dataslot_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_EmploymentContract_$408_to_t_address_payable(value) -> converted {\n        converted := convert_t_contract$_EmploymentContract_$408_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_EmploymentContract_$408_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "6223:1627:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "6223:1627:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6908:728;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7731:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6265:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6908:728;7215:30;7284:10;7308:7;7329:6;7349:12;7375:13;7402:10;7426:8;7448;7470:16;7500:8;7248:270;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7215:303;;7528:19;7553:11;7528:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7580:49;7604:11;7618:10;7580:49;;;;;;;:::i;:::-;;;;;;;;6908:728;;;;;;;;;;:::o;7731:117::-;7776:27;7822:19;7815:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7731:117;:::o;6265:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:1428::-;;;;;;;;;;809:3;797:9;788:7;784:23;780:33;777:2;;;826:1;823;816:12;777:2;869:1;894:53;939:7;930:6;919:9;915:22;894:53;:::i;:::-;884:63;;840:117;996:2;1022:53;1067:7;1058:6;1047:9;1043:22;1022:53;:::i;:::-;1012:63;;967:118;1124:2;1150:53;1195:7;1186:6;1175:9;1171:22;1150:53;:::i;:::-;1140:63;;1095:118;1252:2;1278:53;1323:7;1314:6;1303:9;1299:22;1278:53;:::i;:::-;1268:63;;1223:118;1380:3;1407:53;1452:7;1443:6;1432:9;1428:22;1407:53;:::i;:::-;1397:63;;1351:119;1509:3;1536:53;1581:7;1572:6;1561:9;1557:22;1536:53;:::i;:::-;1526:63;;1480:119;1638:3;1665:53;1710:7;1701:6;1690:9;1686:22;1665:53;:::i;:::-;1655:63;;1609:119;1767:3;1794:53;1839:7;1830:6;1819:9;1815:22;1794:53;:::i;:::-;1784:63;;1738:119;1896:3;1923:53;1968:7;1959:6;1948:9;1944:22;1923:53;:::i;:::-;1913:63;;1867:119;767:1226;;;;;;;;;;;:::o;1999:247::-;;2123:80;2199:3;2191:6;2123:80;:::i;:::-;2235:4;2230:3;2226:14;2212:28;;2113:133;;;;:::o;2252:118::-;2339:24;2357:5;2339:24;:::i;:::-;2334:3;2327:37;2317:53;;:::o;2434:886::-;;2616:80;2690:5;2616:80;:::i;:::-;2712:94;2799:6;2794:3;2712:94;:::i;:::-;2705:101;;2830:82;2906:5;2830:82;:::i;:::-;2935:7;2966:1;2951:344;2976:6;2973:1;2970:13;2951:344;;;3052:6;3046:13;3079:97;3172:3;3157:13;3079:97;:::i;:::-;3072:104;;3199:86;3278:6;3199:86;:::i;:::-;3189:96;;3011:284;2998:1;2995;2991:9;2986:14;;2951:344;;;2955:14;3311:3;3304:10;;2592:728;;;;;;;:::o;3326:189::-;3437:71;3502:5;3437:71;:::i;:::-;3432:3;3425:84;3415:100;;:::o;3521:199::-;3642:71;3707:5;3642:71;:::i;:::-;3637:3;3630:84;3620:100;;:::o;3726:118::-;3813:24;3831:5;3813:24;:::i;:::-;3808:3;3801:37;3791:53;;:::o;3850:332::-;;4009:2;3998:9;3994:18;3986:26;;4022:71;4090:1;4079:9;4075:17;4066:6;4022:71;:::i;:::-;4103:72;4171:2;4160:9;4156:18;4147:6;4103:72;:::i;:::-;3976:206;;;;;:::o;4188:1219::-;;4571:3;4560:9;4556:19;4548:27;;4585:71;4653:1;4642:9;4638:17;4629:6;4585:71;:::i;:::-;4666:72;4734:2;4723:9;4719:18;4710:6;4666:72;:::i;:::-;4748;4816:2;4805:9;4801:18;4792:6;4748:72;:::i;:::-;4830;4898:2;4887:9;4883:18;4874:6;4830:72;:::i;:::-;4912:73;4980:3;4969:9;4965:19;4956:6;4912:73;:::i;:::-;4995;5063:3;5052:9;5048:19;5039:6;4995:73;:::i;:::-;5078;5146:3;5135:9;5131:19;5122:6;5078:73;:::i;:::-;5161;5229:3;5218:9;5214:19;5205:6;5161:73;:::i;:::-;5244;5312:3;5301:9;5297:19;5288:6;5244:73;:::i;:::-;5327;5395:3;5384:9;5380:19;5371:6;5327:73;:::i;:::-;4538:869;;;;;;;;;;;;;:::o;5413:441::-;;5628:2;5617:9;5613:18;5605:26;;5677:9;5671:4;5667:20;5663:1;5652:9;5648:17;5641:47;5705:142;5842:4;5833:6;5705:142;:::i;:::-;5697:150;;5595:259;;;;:::o;5860:290::-;;6025:2;6014:9;6010:18;6002:26;;6038:105;6140:1;6129:9;6125:17;6116:6;6038:105;:::i;:::-;5992:158;;;;:::o;6156:::-;;6272:3;6264:11;;6302:4;6297:3;6293:14;6285:22;;6254:60;;;:::o;6320:140::-;;6447:5;6441:12;6431:22;;6420:40;;;:::o;6466:139::-;;6594:4;6589:3;6585:14;6577:22;;6567:38;;;:::o;6611:192::-;;6752:6;6747:3;6740:19;6792:4;6787:3;6783:14;6768:29;;6730:73;;;;:::o;6809:96::-;;6875:24;6893:5;6875:24;:::i;:::-;6864:35;;6854:51;;;:::o;6911:126::-;;6988:42;6981:5;6977:54;6966:65;;6956:81;;;:::o;7043:77::-;;7109:5;7098:16;;7088:32;;;:::o;7126:186::-;;7243:63;7300:5;7243:63;:::i;:::-;7230:76;;7220:92;;;:::o;7318:139::-;;7427:24;7445:5;7427:24;:::i;:::-;7414:37;;7404:53;;;:::o;7463:122::-;7536:24;7554:5;7536:24;:::i;:::-;7529:5;7526:35;7516:2;;7575:1;7572;7565:12;7516:2;7506:79;:::o;7591:122::-;7664:24;7682:5;7664:24;:::i;:::-;7657:5;7654:35;7644:2;;7703:1;7700;7693:12;7644:2;7634:79;:::o",
  "source": "pragma solidity ^0.8.0;\n\n/// @title Employment Contract\n/// @notice This contract manages the employment relationship between an employer and an employee.\ncontract EmploymentContract {\n    address public employer;       // Employer's address\n    address public employee;       // Employee's address\n\n    uint256 public salary;         // Monthly salary\n    uint256 public bonus;          // Bonus\n    uint256 public vacationPay;    // Vacation pay\n    uint256 public sickLeavePay;   // Sick leave pay\n    uint256 public penalty;        // Penalty for contract termination\n\n    uint256 public startDate;       // Contract start date\n    uint256 public endDate;         // Contract end date\n    uint256 public lastPaymentDate; // Last payment date\n    uint256 public paymentInterval; // Payment interval\n\n    bool public isSigned = false;  // Contract signed status\n\n    address public reserve;        // Reserve storage for penalty\n\n    event ContractFunded(address indexed from, uint256 amount);\n\n    /// @dev Modifier to check that the action is performed only by the employer\n    modifier onlyEmployer() {\n        require(msg.sender == employer, \"Only employer can perform this action\");\n        _;\n    }\n\n    /// @dev Modifier to check that the action is performed only by the employee\n    modifier onlyEmployee() {\n        require(msg.sender == employee, \"Only employee can perform this action\");\n        _;\n    }\n\n    /// @dev Modifier to check that the contract is signed\n    modifier isContractSigned() {\n        require(isSigned == true, \"Contract is not signed by employee yet\");\n        _;\n    }\n\n    /// @notice Contract constructor\n    /// @param _employer Employer's address\n    /// @param _salary Monthly salary\n    /// @param _bonus Bonus\n    /// @param _vacationPay Vacation pay\n    /// @param _sickLeavePay Sick leave pay\n    /// @param _startDate Contract start date\n    /// @param _endDate Contract end date\n    /// @param _penalty Penalty for contract termination\n    constructor(\n        address _employer,\n        uint256 _salary,\n        uint256 _bonus,\n        uint256 _vacationPay,\n        uint256 _sickLeavePay,\n        uint256 _startDate,\n        uint256 _endDate,\n        uint256 _penalty,\n        uint256 _paymentInterval,\n        address _reserve\n    ) {\n        require(_startDate < _endDate, \"Start date must be before end date\");\n        require(_employer != address(0), \"Employer address cannot be zero\");\n        require(_reserve != address(0), \"Reserve address cannot be zero\");\n\n        employer = _employer;\n        salary = _salary;\n        bonus = _bonus;\n        vacationPay = _vacationPay;\n        sickLeavePay = _sickLeavePay;\n        startDate = _startDate;\n        endDate = _endDate;\n        penalty = _penalty;\n        paymentInterval = _paymentInterval;\n        reserve = _reserve;\n        lastPaymentDate = block.timestamp; // Contract starts upon deployment\n    }\n\n    /// @notice Function for the employee to sign the contract\n    /// @param _employee Employee's address\n    function signContract(address _employee) public onlyEmployer {\n        require(!isSigned, \"Contract already signed\");\n        require(block.timestamp >= startDate, \"Contract start date has not been reached\");\n        require(_employee != address(0), \"Employee address cannot be zero\");\n        employee = _employee;\n        isSigned = true;\n    }\n\n    /// @notice Function for the employee to confirm their signature\n    function confirmEmployeeSignature() public payable onlyEmployee {\n        require(isSigned, \"Contract must be signed by employer first\");\n        require(msg.value == penalty, \"Employee must send the penalty amount\");\n\n        payable(reserve).transfer(penalty);\n    }\n\n    /// @notice Function for weekly salary payment\n    function makePayment() public onlyEmployer isContractSigned {\n        require(block.timestamp >= lastPaymentDate + paymentInterval, \"Payment interval has not passed\");\n        require(block.timestamp < endDate, \"Contract has ended\");\n\n        uint256 paymentAmount = (salary * 12) / (365 days / paymentInterval);\n        require(address(this).balance >= paymentAmount, \"Insufficient contract balance\");\n\n        lastPaymentDate += paymentInterval;\n        payable(employee).transfer(paymentAmount);\n    }\n\n    /// @notice Function to terminate the contract\n    function terminateContract() public isContractSigned {\n        require(block.timestamp < endDate, \"Contract has already ended\");\n\n        if (msg.sender == employer) {\n            require(address(this).balance >= penalty, \"Insufficient contract balance\");\n            payable(employee).transfer(penalty);\n        } else if (msg.sender == employee) {\n            require(address(this).balance >= penalty, \"Insufficient contract balance\");\n            payable(employer).transfer(penalty);\n        } else {\n            revert(\"Only employer or employee can terminate the contract\");\n        }\n\n        isSigned = false;\n    }\n\n    /// @notice Function to fund the contract\n    function fundContract() public payable onlyEmployer {\n        // The employer can fund the contract by sending funds to the contract address.\n        // These funds will be used for salary payments and other payments to the employee.\n        require(msg.value > 0, \"Must send some ether to fund the contract\");\n\n        // Log the contract funding\n        emit ContractFunded(msg.sender, msg.value);\n    }\n\n    /// @notice Function to receive funds by the contract\n    receive() external payable {\n        // This function is called when the contract receives funds without data.\n        // For example, when simply transferring ETH to the contract address.\n        // The funds will be credited to the contract balance and can be used for payments.\n    }\n\n    /// @notice Function to handle incorrect calls\n    fallback() external payable {\n        // This function is called when the contract receives funds with data\n        // or when a function that does not exist in the contract is called.\n        // The funds will be credited to the contract balance and can be used for payments.\n    }\n}\n\n/// @title Employment Contract Factory\n/// @notice This contract allows the creation of EmploymentContract instances.\ncontract EmploymentContractFactory {\n\n    EmploymentContract[] public employmentContracts; // Array of contracts\n\n    /// @notice Event for contract creation\n    /// @param contractAddress Address of the created contract\n    /// @param employer Employer's address\n    event ContractCreated(address contractAddress, address employer);\n\n    /// @notice Function to create a new contract\n    /// @param _salary Monthly salary\n    /// @param _bonus Bonus\n    /// @param _vacationPay Vacation pay\n    /// @param _sickLeavePay Sick leave pay\n    /// @param _startDate Contract start date\n    /// @param _endDate Contract end date\n    /// @param _penalty Penalty for contract termination\n    function createEmploymentContract(\n        uint256 _salary,\n        uint256 _bonus,\n        uint256 _vacationPay,\n        uint256 _sickLeavePay,\n        uint256 _startDate,\n        uint256 _endDate,\n        uint256 _penalty,\n        uint256 _paymentInterval,\n        address _reserve\n    ) public {\n        EmploymentContract newContract = new EmploymentContract(\n            msg.sender,\n            _salary,\n            _bonus,\n            _vacationPay,\n            _sickLeavePay,\n            _startDate,\n            _endDate,\n            _penalty,\n            _paymentInterval,\n            _reserve\n        );\n        employmentContracts.push(newContract);\n        emit ContractCreated(address(newContract), msg.sender);\n    }\n\n    /// @notice Function to get all created contracts\n    /// @return Array of contracts\n    function getContracts() public view returns (EmploymentContract[] memory) {\n        return employmentContracts;\n    }\n}\n",
  "sourcePath": "/Users/denisberesnev/Desktop/Blockchain/smart-contract/contracts/Employment.sol",
  "ast": {
    "absolutePath": "project:/contracts/Employment.sol",
    "exportedSymbols": {
      "EmploymentContract": [
        408
      ],
      "EmploymentContractFactory": [
        489
      ]
    },
    "id": 490,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "25:130:0",
          "text": "@title Employment Contract\n @notice This contract manages the employment relationship between an employer and an employee."
        },
        "fullyImplemented": true,
        "id": 408,
        "linearizedBaseContracts": [
          408
        ],
        "name": "EmploymentContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ae200e79",
            "id": 4,
            "mutability": "mutable",
            "name": "employer",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "189:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "189:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a0a1a7d7",
            "id": 6,
            "mutability": "mutable",
            "name": "employee",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "246:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "246:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0397b652",
            "id": 8,
            "mutability": "mutable",
            "name": "salary",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "304:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "304:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "75b4d78c",
            "id": 10,
            "mutability": "mutable",
            "name": "bonus",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "357:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "357:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed7a1fea",
            "id": 12,
            "mutability": "mutable",
            "name": "vacationPay",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "401:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "401:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bad68548",
            "id": 14,
            "mutability": "mutable",
            "name": "sickLeavePay",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "452:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0edd2ffc",
            "id": 16,
            "mutability": "mutable",
            "name": "penalty",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "505:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0b97bc86",
            "id": 18,
            "mutability": "mutable",
            "name": "startDate",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "577:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "577:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c24a0f8b",
            "id": 20,
            "mutability": "mutable",
            "name": "endDate",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "636:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "636:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7aeabb39",
            "id": 22,
            "mutability": "mutable",
            "name": "lastPaymentDate",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "693:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "693:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1cc1cf46",
            "id": 24,
            "mutability": "mutable",
            "name": "paymentInterval",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "750:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "750:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e66a6b22",
            "id": 27,
            "mutability": "mutable",
            "name": "isSigned",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "807:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 25,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "807:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "830:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cd3293de",
            "id": 29,
            "mutability": "mutable",
            "name": "reserve",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "869:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "869:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 35,
            "name": "ContractFunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "957:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "979:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "979:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:38:0"
            },
            "src": "936:59:0"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1106:100:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1124:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1124:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 41,
                          "name": "employer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1138:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1124:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920656d706c6f7965722063616e20706572666f726d207468697320616374696f6e",
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1148:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebc370e746cdd3e3ba14014134b44b84c39f3eee418adbd2e28c780e6390f942",
                          "typeString": "literal_string \"Only employer can perform this action\""
                        },
                        "value": "Only employer can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebc370e746cdd3e3ba14014134b44b84c39f3eee418adbd2e28c780e6390f942",
                          "typeString": "literal_string \"Only employer can perform this action\""
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1116:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:72:0"
                },
                {
                  "id": 46,
                  "nodeType": "PlaceholderStatement",
                  "src": "1198:1:0"
                }
              ]
            },
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "1001:76:0",
              "text": "@dev Modifier to check that the action is performed only by the employer"
            },
            "id": 48,
            "name": "onlyEmployer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:2:0"
            },
            "src": "1082:124:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "1317:100:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 52,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1335:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1335:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 54,
                          "name": "employee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1349:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1335:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920656d706c6f7965652063616e20706572666f726d207468697320616374696f6e",
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1359:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1281dbe49a256321abe135df4353ce1c8f3d0c62659b79fd07b8a47f1cb9aba1",
                          "typeString": "literal_string \"Only employee can perform this action\""
                        },
                        "value": "Only employee can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1281dbe49a256321abe135df4353ce1c8f3d0c62659b79fd07b8a47f1cb9aba1",
                          "typeString": "literal_string \"Only employee can perform this action\""
                        }
                      ],
                      "id": 51,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1327:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:72:0"
                },
                {
                  "id": 59,
                  "nodeType": "PlaceholderStatement",
                  "src": "1409:1:0"
                }
              ]
            },
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "1212:76:0",
              "text": "@dev Modifier to check that the action is performed only by the employee"
            },
            "id": 61,
            "name": "onlyEmployee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:2:0"
            },
            "src": "1293:124:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "1510:95:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65,
                          "name": "isSigned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1528:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1540:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1528:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206973206e6f74207369676e656420627920656d706c6f79656520796574",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1546:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0e0c2cb174ad5a957ff8119bbf2e9a6ffbb5e71c231b06a7c71aa3d59d96691",
                          "typeString": "literal_string \"Contract is not signed by employee yet\""
                        },
                        "value": "Contract is not signed by employee yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0e0c2cb174ad5a957ff8119bbf2e9a6ffbb5e71c231b06a7c71aa3d59d96691",
                          "typeString": "literal_string \"Contract is not signed by employee yet\""
                        }
                      ],
                      "id": 64,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1520:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:67:0"
                },
                {
                  "id": 71,
                  "nodeType": "PlaceholderStatement",
                  "src": "1597:1:0"
                }
              ]
            },
            "documentation": {
              "id": 62,
              "nodeType": "StructuredDocumentation",
              "src": "1423:54:0",
              "text": "@dev Modifier to check that the contract is signed"
            },
            "id": 73,
            "name": "isContractSigned",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1507:2:0"
            },
            "src": "1482:123:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2283:630:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98,
                          "name": "_startDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "2301:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 99,
                          "name": "_endDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "2314:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2301:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53746172742064617465206d757374206265206265666f726520656e642064617465",
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2324:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33f66c55eb8fddd4e272302bad3dd3fef4bbd349c3219272c506763673fc0dd7",
                          "typeString": "literal_string \"Start date must be before end date\""
                        },
                        "value": "Start date must be before end date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33f66c55eb8fddd4e272302bad3dd3fef4bbd349c3219272c506763673fc0dd7",
                          "typeString": "literal_string \"Start date must be before end date\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2293:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 105,
                          "name": "_employer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "2379:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2400:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2392:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 106,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2392:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2392:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2379:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d706c6f79657220616464726573732063616e6e6f74206265207a65726f",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2404:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f745d3f89fe2d3a2f2a578607ac81f5f6323ed930920a3b6db91b29ebe019df",
                          "typeString": "literal_string \"Employer address cannot be zero\""
                        },
                        "value": "Employer address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f745d3f89fe2d3a2f2a578607ac81f5f6323ed930920a3b6db91b29ebe019df",
                          "typeString": "literal_string \"Employer address cannot be zero\""
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2371:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2371:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2371:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 115,
                          "name": "_reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "2456:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2476:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2468:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 116,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2468:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2468:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2456:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265736572766520616464726573732063616e6e6f74206265207a65726f",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2480:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_833fda17ea679634f68a1f70b87b8dae2965d8d5ec50308f398a9a0565005a09",
                          "typeString": "literal_string \"Reserve address cannot be zero\""
                        },
                        "value": "Reserve address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_833fda17ea679634f68a1f70b87b8dae2965d8d5ec50308f398a9a0565005a09",
                          "typeString": "literal_string \"Reserve address cannot be zero\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2448:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2448:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2448:65:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "employer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "2524:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_employer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "2535:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2524:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:20:0"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "salary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "2554:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "_salary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2563:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2554:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:16:0"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "2580:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "_bonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "2588:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2580:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:14:0"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "vacationPay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2604:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 137,
                      "name": "_vacationPay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "2618:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2604:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2604:26:0"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "sickLeavePay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "2640:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 141,
                      "name": "_sickLeavePay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2655:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2640:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:28:0"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2678:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 145,
                      "name": "_startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2690:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2678:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:22:0"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2710:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2720:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2710:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2710:18:0"
                },
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "penalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2738:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 153,
                      "name": "_penalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2748:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2738:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:18:0"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 156,
                      "name": "paymentInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2766:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 157,
                      "name": "_paymentInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2784:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2766:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2766:34:0"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2810:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 161,
                      "name": "_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2820:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2810:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:18:0"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "lastPaymentDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2838:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 165,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2856:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2856:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2838:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2838:33:0"
                }
              ]
            },
            "documentation": {
              "id": 74,
              "nodeType": "StructuredDocumentation",
              "src": "1611:372:0",
              "text": "@notice Contract constructor\n @param _employer Employer's address\n @param _salary Monthly salary\n @param _bonus Bonus\n @param _vacationPay Vacation pay\n @param _sickLeavePay Sick leave pay\n @param _startDate Contract start date\n @param _endDate Contract end date\n @param _penalty Penalty for contract termination"
            },
            "id": 170,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_employer",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2009:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_salary",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2036:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2036:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_bonus",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2061:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_vacationPay",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2085:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_sickLeavePay",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2115:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2146:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2174:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_penalty",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2200:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_paymentInterval",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2226:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2260:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1999:283:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2283:0:0"
            },
            "scope": 408,
            "src": "1988:925:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "3087:285:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3105:9:0",
                        "subExpression": {
                          "id": 179,
                          "name": "isSigned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "3106:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420616c7265616479207369676e6564",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3116:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e60d1052db370d3257f58223629d532d7b3a944e3ef34f833d82579368eeca30",
                          "typeString": "literal_string \"Contract already signed\""
                        },
                        "value": "Contract already signed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e60d1052db370d3257f58223629d532d7b3a944e3ef34f833d82579368eeca30",
                          "typeString": "literal_string \"Contract already signed\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3097:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3097:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "3097:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 185,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3160:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3160:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 187,
                          "name": "startDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "3179:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3160:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374207374617274206461746520686173206e6f74206265656e2072656163686564",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3190:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55a9fe2509f72b83ad92de1f0b90c4a22b756801df57c15fdc49731954b5aaf9",
                          "typeString": "literal_string \"Contract start date has not been reached\""
                        },
                        "value": "Contract start date has not been reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55a9fe2509f72b83ad92de1f0b90c4a22b756801df57c15fdc49731954b5aaf9",
                          "typeString": "literal_string \"Contract start date has not been reached\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3152:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3152:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3152:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 193,
                          "name": "_employee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "3251:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3272:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3264:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 194,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3264:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3264:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3251:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d706c6f79656520616464726573732063616e6e6f74206265207a65726f",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3276:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_674d85938c621c0fa8eec86f5ddc80365c87dc7f00279f62544eb8c932957c09",
                          "typeString": "literal_string \"Employee address cannot be zero\""
                        },
                        "value": "Employee address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_674d85938c621c0fa8eec86f5ddc80365c87dc7f00279f62544eb8c932957c09",
                          "typeString": "literal_string \"Employee address cannot be zero\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3243:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3243:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3243:67:0"
                },
                {
                  "expression": {
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 202,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "3320:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 203,
                      "name": "_employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "3331:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3320:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "3320:20:0"
                },
                {
                  "expression": {
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 206,
                      "name": "isSigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3350:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3361:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3350:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "3350:15:0"
                }
              ]
            },
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
              "src": "2919:102:0",
              "text": "@notice Function for the employee to sign the contract\n @param _employee Employee's address"
            },
            "functionSelector": "79e93bf8",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 176,
                "modifierName": {
                  "id": 175,
                  "name": "onlyEmployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48,
                  "src": "3074:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3074:12:0"
              }
            ],
            "name": "signContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_employee",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "3048:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3048:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3047:19:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3087:0:0"
            },
            "scope": 408,
            "src": "3026:346:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "3511:204:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 218,
                        "name": "isSigned",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3529:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206d757374206265207369676e656420627920656d706c6f796572206669727374",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3539:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb39d1040ab1d49e83ecb577e1cb248323e8e7431d556d64214712f4698aba51",
                          "typeString": "literal_string \"Contract must be signed by employer first\""
                        },
                        "value": "Contract must be signed by employer first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb39d1040ab1d49e83ecb577e1cb248323e8e7431d556d64214712f4698aba51",
                          "typeString": "literal_string \"Contract must be signed by employer first\""
                        }
                      ],
                      "id": 217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3521:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3521:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "3521:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 223,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3601:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3601:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 225,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "3614:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3601:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d706c6f796565206d7573742073656e64207468652070656e616c747920616d6f756e74",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3623:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fd74043b7bc3d53038fba368bf331fd058b19713107801b6c80b5d153580dc9",
                          "typeString": "literal_string \"Employee must send the penalty amount\""
                        },
                        "value": "Employee must send the penalty amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fd74043b7bc3d53038fba368bf331fd058b19713107801b6c80b5d153580dc9",
                          "typeString": "literal_string \"Employee must send the penalty amount\""
                        }
                      ],
                      "id": 222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3593:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3593:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "3593:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 235,
                        "name": "penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3700:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 232,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "3682:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3674:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 230,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3674:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3674:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3674:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3674:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:34:0"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "3378:64:0",
              "text": "@notice Function for the employee to confirm their signature"
            },
            "functionSelector": "e19bc3eb",
            "id": 239,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 215,
                "modifierName": {
                  "id": 214,
                  "name": "onlyEmployee",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61,
                  "src": "3498:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3498:12:0"
              }
            ],
            "name": "confirmEmployeeSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3480:2:0"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3511:0:0"
            },
            "scope": 408,
            "src": "3447:268:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "3832:444:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 248,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3850:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3850:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 250,
                            "name": "lastPaymentDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3869:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 251,
                            "name": "paymentInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3887:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3869:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3850:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7420696e74657276616c20686173206e6f7420706173736564",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3904:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0d2e1aeb1eb24d55f7fe6645214e82c306c253247df757908bb537654b8ef80",
                          "typeString": "literal_string \"Payment interval has not passed\""
                        },
                        "value": "Payment interval has not passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0d2e1aeb1eb24d55f7fe6645214e82c306c253247df757908bb537654b8ef80",
                          "typeString": "literal_string \"Payment interval has not passed\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3842:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3842:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:96:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 258,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3956:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3956:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 260,
                          "name": "endDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3974:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3956:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742068617320656e646564",
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3983:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_827ec5460a1551260584b9e79b90005d3911531f0f8517e005c53a4058dc795e",
                          "typeString": "literal_string \"Contract has ended\""
                        },
                        "value": "Contract has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_827ec5460a1551260584b9e79b90005d3911531f0f8517e005c53a4058dc795e",
                          "typeString": "literal_string \"Contract has ended\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3948:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3948:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:56:0"
                },
                {
                  "assignments": [
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "paymentAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 300,
                      "src": "4015:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4015:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 276,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 267,
                            "name": "salary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "4040:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3132",
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4049:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_12_by_1",
                              "typeString": "int_const 12"
                            },
                            "value": "12"
                          },
                          "src": "4040:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 270,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4039:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "333635",
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4056:8:0",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31536000_by_1",
                              "typeString": "int_const 31536000"
                            },
                            "value": "365"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 272,
                            "name": "paymentInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "4067:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4056:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 274,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4055:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4039:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4015:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 280,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "4109:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EmploymentContract_$408",
                                  "typeString": "contract EmploymentContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EmploymentContract_$408",
                                  "typeString": "contract EmploymentContract"
                                }
                              ],
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4101:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 278,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4101:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4101:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4101:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 283,
                          "name": "paymentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "4126:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4101:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4141:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                          "typeString": "literal_string \"Insufficient contract balance\""
                        },
                        "value": "Insufficient contract balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                          "typeString": "literal_string \"Insufficient contract balance\""
                        }
                      ],
                      "id": 277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4093:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4093:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "4093:80:0"
                },
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 288,
                      "name": "lastPaymentDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "4184:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "paymentInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "4203:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4184:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "4184:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 297,
                        "name": "paymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "4255:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 294,
                            "name": "employee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "4236:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4228:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 292,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4228:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4228:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4228:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4228:41:0"
                }
              ]
            },
            "documentation": {
              "id": 240,
              "nodeType": "StructuredDocumentation",
              "src": "3721:46:0",
              "text": "@notice Function for weekly salary payment"
            },
            "functionSelector": "d8d79700",
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 243,
                "modifierName": {
                  "id": 242,
                  "name": "onlyEmployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48,
                  "src": "3802:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3802:12:0"
              },
              {
                "id": 245,
                "modifierName": {
                  "id": 244,
                  "name": "isContractSigned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "3815:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3815:16:0"
              }
            ],
            "name": "makePayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3792:2:0"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3832:0:0"
            },
            "scope": 408,
            "src": "3772:504:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "4386:569:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 308,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4404:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4404:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 310,
                          "name": "endDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4422:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4404:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742068617320616c726561647920656e646564",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4431:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8e50b7740fca67cae107eaadd87f93f96978cba01c3bb242a5b972878a972f8",
                          "typeString": "literal_string \"Contract has already ended\""
                        },
                        "value": "Contract has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8e50b7740fca67cae107eaadd87f93f96978cba01c3bb242a5b972878a972f8",
                          "typeString": "literal_string \"Contract has already ended\""
                        }
                      ],
                      "id": 307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4396:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4396:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4396:64:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 315,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4475:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4475:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 317,
                      "name": "employer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "4489:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4475:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 339,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4657:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4657:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 341,
                        "name": "employee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "4671:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4657:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 367,
                      "nodeType": "Block",
                      "src": "4835:87:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "4f6e6c7920656d706c6f796572206f7220656d706c6f7965652063616e207465726d696e6174652074686520636f6e7472616374",
                                "id": 364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4856:54:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_95cf7f17c2292d0bf447c35791f42247324389397d20fc45c235939477373ee6",
                                  "typeString": "literal_string \"Only employer or employee can terminate the contract\""
                                },
                                "value": "Only employer or employee can terminate the contract"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_95cf7f17c2292d0bf447c35791f42247324389397d20fc45c235939477373ee6",
                                  "typeString": "literal_string \"Only employer or employee can terminate the contract\""
                                }
                              ],
                              "id": 363,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "4849:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4849:62:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 366,
                          "nodeType": "ExpressionStatement",
                          "src": "4849:62:0"
                        }
                      ]
                    },
                    "id": 368,
                    "nodeType": "IfStatement",
                    "src": "4653:269:0",
                    "trueBody": {
                      "id": 362,
                      "nodeType": "Block",
                      "src": "4681:148:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 346,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "4711:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_EmploymentContract_$408",
                                          "typeString": "contract EmploymentContract"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_EmploymentContract_$408",
                                          "typeString": "contract EmploymentContract"
                                        }
                                      ],
                                      "id": 345,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4703:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 344,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4703:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4703:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "4703:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 349,
                                  "name": "penalty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "4728:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4703:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4737:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                  "typeString": "literal_string \"Insufficient contract balance\""
                                },
                                "value": "Insufficient contract balance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                  "typeString": "literal_string \"Insufficient contract balance\""
                                }
                              ],
                              "id": 343,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "4695:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4695:74:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 353,
                          "nodeType": "ExpressionStatement",
                          "src": "4695:74:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 359,
                                "name": "penalty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "4810:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 356,
                                    "name": "employer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4,
                                    "src": "4791:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4783:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 354,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4783:8:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4783:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "4783:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4783:35:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 361,
                          "nodeType": "ExpressionStatement",
                          "src": "4783:35:0"
                        }
                      ]
                    }
                  },
                  "id": 369,
                  "nodeType": "IfStatement",
                  "src": "4471:451:0",
                  "trueBody": {
                    "id": 338,
                    "nodeType": "Block",
                    "src": "4499:148:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 322,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "4529:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_EmploymentContract_$408",
                                        "typeString": "contract EmploymentContract"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_EmploymentContract_$408",
                                        "typeString": "contract EmploymentContract"
                                      }
                                    ],
                                    "id": 321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4521:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 320,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4521:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4521:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "4521:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 325,
                                "name": "penalty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "4546:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4521:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4555:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                "typeString": "literal_string \"Insufficient contract balance\""
                              },
                              "value": "Insufficient contract balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                "typeString": "literal_string \"Insufficient contract balance\""
                              }
                            ],
                            "id": 319,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4513:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4513:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 329,
                        "nodeType": "ExpressionStatement",
                        "src": "4513:74:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 335,
                              "name": "penalty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "4628:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 332,
                                  "name": "employee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6,
                                  "src": "4609:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4601:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 330,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4601:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4601:17:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "4601:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4601:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "4601:35:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 370,
                      "name": "isSigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "4932:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4943:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4932:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "4932:16:0"
                }
              ]
            },
            "documentation": {
              "id": 302,
              "nodeType": "StructuredDocumentation",
              "src": "4282:46:0",
              "text": "@notice Function to terminate the contract"
            },
            "functionSelector": "2fd949ca",
            "id": 375,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 305,
                "modifierName": {
                  "id": 304,
                  "name": "isContractSigned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "4369:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4369:16:0"
              }
            ],
            "name": "terminateContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4359:2:0"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4386:0:0"
            },
            "scope": 408,
            "src": "4333:622:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "5059:353:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 382,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5257:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5257:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5269:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5257:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742073656e6420736f6d6520657468657220746f2066756e642074686520636f6e7472616374",
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5272:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa38f79db4a30926d664d6ea8ec25afbd90deb469a581b2da917ce95f4524bf0",
                          "typeString": "literal_string \"Must send some ether to fund the contract\""
                        },
                        "value": "Must send some ether to fund the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa38f79db4a30926d664d6ea8ec25afbd90deb469a581b2da917ce95f4524bf0",
                          "typeString": "literal_string \"Must send some ether to fund the contract\""
                        }
                      ],
                      "id": 381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5249:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5249:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "5249:67:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 390,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5383:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5383:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 392,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5395:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5395:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 389,
                      "name": "ContractFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "5368:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5368:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "EmitStatement",
                  "src": "5363:42:0"
                }
              ]
            },
            "documentation": {
              "id": 376,
              "nodeType": "StructuredDocumentation",
              "src": "4961:41:0",
              "text": "@notice Function to fund the contract"
            },
            "functionSelector": "bd097e21",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 379,
                "modifierName": {
                  "id": 378,
                  "name": "onlyEmployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48,
                  "src": "5046:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5046:12:0"
              }
            ],
            "name": "fundContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5028:2:0"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5059:0:0"
            },
            "scope": 408,
            "src": "5007:405:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "5503:259:0",
              "statements": []
            },
            "documentation": {
              "id": 398,
              "nodeType": "StructuredDocumentation",
              "src": "5418:53:0",
              "text": "@notice Function to receive funds by the contract"
            },
            "id": 402,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5483:2:0"
            },
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5503:0:0"
            },
            "scope": 408,
            "src": "5476:286:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "5847:254:0",
              "statements": []
            },
            "documentation": {
              "id": 403,
              "nodeType": "StructuredDocumentation",
              "src": "5768:46:0",
              "text": "@notice Function to handle incorrect calls"
            },
            "id": 407,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5827:2:0"
            },
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5847:0:0"
            },
            "scope": 408,
            "src": "5819:282:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 490,
        "src": "155:5948:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          408
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 409,
          "nodeType": "StructuredDocumentation",
          "src": "6105:118:0",
          "text": "@title Employment Contract Factory\n @notice This contract allows the creation of EmploymentContract instances."
        },
        "fullyImplemented": true,
        "id": 489,
        "linearizedBaseContracts": [
          489
        ],
        "name": "EmploymentContractFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fab21ab1",
            "id": 413,
            "mutability": "mutable",
            "name": "employmentContracts",
            "nodeType": "VariableDeclaration",
            "scope": 489,
            "src": "6265:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_EmploymentContract_$408_$dyn_storage",
              "typeString": "contract EmploymentContract[]"
            },
            "typeName": {
              "baseType": {
                "id": 411,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 410,
                  "name": "EmploymentContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 408,
                  "src": "6265:18:0"
                },
                "referencedDeclaration": 408,
                "src": "6265:18:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_EmploymentContract_$408",
                  "typeString": "contract EmploymentContract"
                }
              },
              "id": 412,
              "nodeType": "ArrayTypeName",
              "src": "6265:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_EmploymentContract_$408_$dyn_storage_ptr",
                "typeString": "contract EmploymentContract[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 414,
              "nodeType": "StructuredDocumentation",
              "src": "6341:145:0",
              "text": "@notice Event for contract creation\n @param contractAddress Address of the created contract\n @param employer Employer's address"
            },
            "id": 420,
            "name": "ContractCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "6513:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6513:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 418,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "employer",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "6538:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6538:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6512:43:0"
            },
            "src": "6491:65:0"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "7205:431:0",
              "statements": [
                {
                  "assignments": [
                    444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 444,
                      "mutability": "mutable",
                      "name": "newContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 476,
                      "src": "7215:30:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EmploymentContract_$408",
                        "typeString": "contract EmploymentContract"
                      },
                      "typeName": {
                        "id": 443,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 442,
                          "name": "EmploymentContract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 408,
                          "src": "7215:18:0"
                        },
                        "referencedDeclaration": 408,
                        "src": "7215:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EmploymentContract_$408",
                          "typeString": "contract EmploymentContract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 460,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 448,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7284:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7284:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 450,
                        "name": "_salary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "7308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 451,
                        "name": "_bonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "7329:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 452,
                        "name": "_vacationPay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "7349:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 453,
                        "name": "_sickLeavePay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "7375:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 454,
                        "name": "_startDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "7402:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 455,
                        "name": "_endDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "7426:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 456,
                        "name": "_penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "7448:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 457,
                        "name": "_paymentInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "7470:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 458,
                        "name": "_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "7500:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7248:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_contract$_EmploymentContract_$408_$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address) returns (contract EmploymentContract)"
                      },
                      "typeName": {
                        "id": 446,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 445,
                          "name": "EmploymentContract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 408,
                          "src": "7252:18:0"
                        },
                        "referencedDeclaration": 408,
                        "src": "7252:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EmploymentContract_$408",
                          "typeString": "contract EmploymentContract"
                        }
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7248:270:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EmploymentContract_$408",
                      "typeString": "contract EmploymentContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7215:303:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 464,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "7553:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EmploymentContract_$408",
                          "typeString": "contract EmploymentContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_EmploymentContract_$408",
                          "typeString": "contract EmploymentContract"
                        }
                      ],
                      "expression": {
                        "id": 461,
                        "name": "employmentContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "7528:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_EmploymentContract_$408_$dyn_storage",
                          "typeString": "contract EmploymentContract[] storage ref"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7528:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_EmploymentContract_$408_$returns$__$",
                        "typeString": "function (contract EmploymentContract)"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7528:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "7528:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 470,
                            "name": "newContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "7604:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EmploymentContract_$408",
                              "typeString": "contract EmploymentContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EmploymentContract_$408",
                              "typeString": "contract EmploymentContract"
                            }
                          ],
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7596:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7596:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7596:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 472,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7618:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7618:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 467,
                      "name": "ContractCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "7580:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7580:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 475,
                  "nodeType": "EmitStatement",
                  "src": "7575:54:0"
                }
              ]
            },
            "documentation": {
              "id": 421,
              "nodeType": "StructuredDocumentation",
              "src": "6562:341:0",
              "text": "@notice Function to create a new contract\n @param _salary Monthly salary\n @param _bonus Bonus\n @param _vacationPay Vacation pay\n @param _sickLeavePay Sick leave pay\n @param _startDate Contract start date\n @param _endDate Contract end date\n @param _penalty Penalty for contract termination"
            },
            "functionSelector": "22516eb0",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createEmploymentContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "_salary",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "6951:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6951:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "_bonus",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "6976:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6976:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "_vacationPay",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "7000:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7000:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_sickLeavePay",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "7030:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7030:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "7061:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7061:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "7089:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7089:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_penalty",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "7115:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7115:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_paymentInterval",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "7141:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7141:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "7175:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7175:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6941:256:0"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7205:0:0"
            },
            "scope": 489,
            "src": "6908:728:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "7805:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 485,
                    "name": "employmentContracts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 413,
                    "src": "7822:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_EmploymentContract_$408_$dyn_storage",
                      "typeString": "contract EmploymentContract[] storage ref"
                    }
                  },
                  "functionReturnParameters": 484,
                  "id": 486,
                  "nodeType": "Return",
                  "src": "7815:26:0"
                }
              ]
            },
            "documentation": {
              "id": 478,
              "nodeType": "StructuredDocumentation",
              "src": "7642:84:0",
              "text": "@notice Function to get all created contracts\n @return Array of contracts"
            },
            "functionSelector": "c3a2a93a",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7752:2:0"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "7776:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_EmploymentContract_$408_$dyn_memory_ptr",
                    "typeString": "contract EmploymentContract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 481,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 480,
                        "name": "EmploymentContract",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 408,
                        "src": "7776:18:0"
                      },
                      "referencedDeclaration": 408,
                      "src": "7776:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EmploymentContract_$408",
                        "typeString": "contract EmploymentContract"
                      }
                    },
                    "id": 482,
                    "nodeType": "ArrayTypeName",
                    "src": "7776:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_EmploymentContract_$408_$dyn_storage_ptr",
                      "typeString": "contract EmploymentContract[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7775:29:0"
            },
            "scope": 489,
            "src": "7731:117:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 490,
        "src": "6223:1627:0"
      }
    ],
    "src": "0:7851:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xFfb49b815d4e2FA2a59AEa425A5Fc220eb8B2C89",
      "transactionHash": "0x0731e20fb2d9a0b4fba9272d4a3448513546b6d8371bf3d27f63e9c2d9ccad2d"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-06-08T14:56:07.427Z",
  "networkType": "ethereum",
  "devdoc": {
    "events": {
      "ContractCreated(address,address)": {
        "params": {
          "contractAddress": "Address of the created contract",
          "employer": "Employer's address"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "createEmploymentContract(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)": {
        "params": {
          "_bonus": "Bonus",
          "_endDate": "Contract end date",
          "_penalty": "Penalty for contract termination",
          "_salary": "Monthly salary",
          "_sickLeavePay": "Sick leave pay",
          "_startDate": "Contract start date",
          "_vacationPay": "Vacation pay"
        }
      },
      "getContracts()": {
        "returns": {
          "_0": "Array of contracts"
        }
      }
    },
    "title": "Employment Contract Factory",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ContractCreated(address,address)": {
        "notice": "Event for contract creation"
      }
    },
    "kind": "user",
    "methods": {
      "createEmploymentContract(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)": {
        "notice": "Function to create a new contract"
      },
      "getContracts()": {
        "notice": "Function to get all created contracts"
      }
    },
    "notice": "This contract allows the creation of EmploymentContract instances.",
    "version": 1
  }
}